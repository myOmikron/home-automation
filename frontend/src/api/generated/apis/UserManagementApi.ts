/* tslint:disable */
/* eslint-disable */
/**
 * brain
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: git@omikron.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    ApiErrorResponse,
    ApiErrorResponseFromJSON,
    ApiErrorResponseToJSON,
    GetMeResponse,
    GetMeResponseFromJSON,
    GetMeResponseToJSON,
} from '../models';

/**
 * UserManagementApi - interface
 * 
 * @export
 * @interface UserManagementApiInterface
 */
export interface UserManagementApiInterface {
    /**
     * Retrieve the data about the currently logged in user
     * @summary Retrieve the data about the currently logged in user
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserManagementApiInterface
     */
    getMeRaw(): Promise<runtime.ApiResponse<GetMeResponse>>;

    /**
     * Retrieve the data about the currently logged in user
     * Retrieve the data about the currently logged in user
     */
    getMe(): Promise<GetMeResponse>;

}

/**
 * 
 */
export class UserManagementApi extends runtime.BaseAPI implements UserManagementApiInterface {

    /**
     * Retrieve the data about the currently logged in user
     * Retrieve the data about the currently logged in user
     */
    async getMeRaw(): Promise<runtime.ApiResponse<GetMeResponse>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/users/me`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => GetMeResponseFromJSON(jsonValue));
    }

    /**
     * Retrieve the data about the currently logged in user
     * Retrieve the data about the currently logged in user
     */
    async getMe(): Promise<GetMeResponse> {
        const response = await this.getMeRaw();
        return await response.value();
    }

}
